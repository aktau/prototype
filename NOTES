Debugging and profiling
=======================
How to use the apple OpenGL profiler, very handy:
https://developer.apple.com/library/mac/#technotes/tn2178/_index.html

Allocators
==========

Zmalloc features native support for jemalloc and tcmalloc, but even easier would be to try the LD_PRELOAD
trick later and see if it helps.

Alternatively or additionally, we could consider an arena allocator (i.e.: libarena): http://25thandclement.com/~william/projects/libarena.html

Links to be reviewed for implementation
=======================================

Techniques from "crazy fractal worlds":
http://www.youtube.com/watch?v=8-5Z_031x00
http://www.iquilezles.org/www/material/function2009/function2009.pdf

Distance functions - iñigo quilez:
http://www.iquilezles.org/www/articles/distfunctions/distfunctions.htm

Awesome articles - iñigo quilez:
http://iquilezles.org/www/

The care and feeding of an OpenGL 3.2 core context on OSX:
http://hci.rwth-aachen.de/opengl_3_2_tutorial

Fully self-contained OpenGL 3.2 + GLSL 1.5 example, with matrix functions in C:
http://www.lighthouse3d.com/cg-topics/code-samples/opengl-3-3-glsl-1-5-sample/

Indexed drawing:
http://www.arcsynthesis.org/gltut/Positioning/Tutorial%2005.html

Kazmatch, a C math library for games:
https://github.com/Kazade/kazmath/tree/master/kazmath

Apple, best practices for working with vertex data:
http://developer.apple.com/library/ios/#documentation/3ddrawing/conceptual/opengles_programmingguide/TechniquesforWorkingwithVertexData/TechniquesforWorkingwithVertexData.html

[INSTANCING] Drawing instanced geometry with the help of glVertexAttribDivisor:
http://programming4.us/multimedia/8306.aspx

[INSTANCING] Alternative way to instance, pass a buffer and index it with gl_InstanceId:
http://gamedev.stackexchange.com/questions/60203/most-efficient-way-to-draw-large-number-of-the-same-objects-but-with-different

[INSTANCING] Wolfire Lugaru: pseudo-instancing and discussion:
http://blog.wolfire.com/2009/11/Fast-object-instancing

[INSTANCING] iki.fi, pass a (transformation) matrix (mat4) with 4 glVertexAttribPointer()-calls and glVertexAttribDivisor, very cool:
http://sol.gfxile.net/instancing.html

[FILESYSTEM] efsw, file system watching (C++ but used by C projects as well):
https://bitbucket.org/SpartanJ/efsw

[ENGINES] DarkHammer, C, Lua:
https://bitbucket.org/sepul/dark-hammer

[ENGINES] Urho3D, C++, Lua, Task-based multithreading:
https://code.google.com/p/urho3d/

[SHADER EFFECTS] Glow and Bloom:
http://devmaster.net/posts/3100/shader-effects-glow-and-bloom

[SHADER EFFECTS]: Depth of field (DOF):
http://devmaster.net/posts/3021/shader-effects-depth-of-field

[TESSELATION] Tesselation does work on OSX:
http://jonmacey.blogspot.de/2013/05/glsl-tessellation-shaders-under-mac-osx.html

[GRAPHICS] Screen space ambient occlusion (SSAO), a step for deferred rendering:
http://devmaster.net/posts/3095/shader-effects-screen-space-ambient-occlusion

[LUA] How to export symbols from an executable:
http://stackoverflow.com/questions/3954137/mac-how-to-export-symbols-from-an-executable

[LUA] How to include an extra module at compile time (such as YAML):
http://stackoverflow.com/questions/11485911/lua-5-2-c-api-and-require

[LUA] use FFI module:
http://stackoverflow.com/questions/5919743/how-to-use-luajits-ffi-module-when-embedding?rq=1

[TERRAIN] Terrain generation tutorial:
http://www.shamusyoung.com/twentysidedtale/?p=147